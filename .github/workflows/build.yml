on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ghcr.io/mii443/ncb-tts-r2
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: mii443
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract platform for tagging
        id: platform
        run: |
          platform_clean=$(echo "${{ matrix.platform }}" | tr '/' '-')
          echo "clean=${platform_clean}" >> $GITHUB_OUTPUT

      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}-${{ steps.platform.outputs.clean }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ steps.platform.outputs.clean }}
          cache-to: type=gha,mode=max,scope=${{ steps.platform.outputs.clean }}

  create-manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: mii443
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ghcr.io/mii443/ncb-tts-r2
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      - name: Create and push manifest
        run: |
          for tag in ${{ steps.meta.outputs.tags }}; do
            docker manifest create $tag \
              ${tag}-linux-amd64 \
              ${tag}-linux-arm64
            docker manifest push $tag
          done
